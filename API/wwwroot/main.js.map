{"version":3,"sources":["./src/app/palette-detail/palette-detail.component.ts","./src/app/palette-detail/palette-detail.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/_models/UserParams.ts","./src/app/_services/account.service.ts","./src/app/_services/palette.service.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/text-input/text-input.component.ts","./src/app/text-input/text-input.component.html","./src/app/new-palette-color/new-palette-color.component.ts","./src/app/new-palette-color/new-palette-color.component.html","./src/app/_models/PaginatedResult.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/palette-card/palette-card.component.ts","./src/app/palette-card/palette-card.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/_resolvers/palette-detail.resolver.ts","./src/app/_services/paginationHelper.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Palette } from '../_models/Palette';\n\n@Component({\n  selector: 'app-palette-detail',\n  templateUrl: './palette-detail.component.html',\n  styleUrls: ['./palette-detail.component.css']\n})\nexport class PaletteDetailComponent implements OnInit {\n  palette: Palette;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.palette = data.PaletteDetailResolver;\n    });\n  }\n}\n","<h1>{{palette.title}}</h1>\n<h4 style=\"color: white; margin: 0px; padding: 12px 0px 12px 8px;\" [style.background]=\"palette.color1\">\n  {{palette.color1}}\n</h4>\n<h4 style=\"color: white; margin: 0px; padding: 12px 0px 12px 8px;\" [style.background]=\"palette.color2\">\n  {{palette.color2}}\n</h4>\n<h4 style=\"color: white; margin: 0px; padding: 12px 0px 12px 8px;\" [style.background]=\"palette.color3\">\n  {{palette.color3}}\n</h4>\n<h4 style=\"color: white; margin: 0px; padding: 12px 0px 12px 8px;\" [style.background]=\"palette.color4\">\n  {{palette.color4}}\n</h4>\n<h4 style=\"color: white; margin: 0px; padding: 12px 0px 12px 8px;\" [style.background]=\"palette.color5\">\n  {{palette.color5}}\n</h4>\n\n<div style=\"display: flex; margin-top: 40px;\">\n  <h4 style=\"width: 20%; height: 100px; color: white; margin: 0px; padding: 12px 0px 12px 8px;\"\n    [style.background]=\"palette.color1\">\n  </h4>\n  <h4 style=\"width: 20%; height: 100px; color: white; margin: 0px; padding: 12px 0px 12px 8px;\"\n    [style.background]=\"palette.color2\">\n  </h4>\n  <h4 style=\"width: 20%; height: 100px; color: white; margin: 0px; padding: 12px 0px 12px 8px;\"\n    [style.background]=\"palette.color3\">\n  </h4>\n  <h4 style=\"width: 20%; height: 100px; color: white; margin: 0px; padding: 12px 0px 12px 8px;\"\n    [style.background]=\"palette.color4\">\n  </h4>\n  <h4 style=\"width: 20%; height: 100px; color: white; margin: 0px; padding: 12px 0px 12px 8px;\"\n    [style.background]=\"palette.color5\">\n  </h4>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n  @Output() cancelRegistration = new EventEmitter();\n  registrationForm: FormGroup;\n  validationErrors: string[] = []; // TODO\n\n  constructor(private accountService: AccountService, private fb: FormBuilder, private router: Router) { }\n\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  initializeForm() {\n    this.registrationForm = this.fb.group({\n      username: ['', Validators.required],\n      knownAs: ['', Validators.required],\n      city: ['', Validators.required],\n      country: ['', Validators.required],\n      favoriteColor: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]],\n      confirmPassword: ['', [Validators.required, this.matchValues('password')]]\n    })\n  }\n\n  matchValues(matchTo: string): ValidatorFn {\n    return (control: AbstractControl) => {\n      return control?.value === control?.parent?.controls[matchTo].value ? null : { isMatching: true };\n    }\n  }\n\n  register() {\n    this.accountService.register(this.registrationForm.value).subscribe((res) => {\n      this.router.navigateByUrl('/palettes');\n    }, err => {\n      this.validationErrors = err;\n    })\n  }\n\n  cancel() {\n    this.cancelRegistration.emit(false);\n  }\n}\n","<form [formGroup]=\"registrationForm\" (ngSubmit)=\"registrationForm.valid && register()\" autocomplete=\"off\">\n  <h2>SIGN UP</h2>\n  <app-text-input [formControl]='registrationForm.controls[\"username\"]' [label]='\"Username\"'></app-text-input>\n  <app-text-input [formControl]='registrationForm.controls[\"knownAs\"]' [label]='\"Known As\"'></app-text-input>\n  <app-text-input [formControl]='registrationForm.controls[\"city\"]' [label]='\"City\"'></app-text-input>\n  <app-text-input [formControl]='registrationForm.controls[\"country\"]' [label]='\"Country\"' [type]='\"text\"'>\n  </app-text-input>\n  <app-text-input [formControl]='registrationForm.controls[\"favoriteColor\"]' [label]='\"favoriteColor\"' [type]='\"text\"'>\n  </app-text-input>\n  <!-- TODO ^^^: color picker package, type, or custom built. this will be used to theme the primary colors- nav, buttons, etc -->\n  <app-text-input [formControl]='registrationForm.controls[\"password\"]' [label]='\"Password\"' [type]='\"password\"'>\n  </app-text-input>\n  <app-text-input [formControl]='registrationForm.controls[\"confirmPassword\"]' [label]='\"Confirm Password\"'\n    [type]='\"password\"'></app-text-input>\n\n  <div class=\"row\" *ngIf=\"validationErrors.length > 0\">\n    <ul class=\"text-danger\">\n      <li *ngFor=\"let err of validationErrors\">{{err}}</li>\n    </ul>\n  </div>\n\n  <div>\n    <button mat-button type=\"submit\" [disabled]=\"!registrationForm.valid\">Register</button>\n    <button mat-button type=\"button\" (click)=\"cancel()\">Cancel</button>\n  </div>\n</form>\n","export class UserParams {\n  pageNumber = 1;\n  pageSize = 20;\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport { User } from 'src/app/_models/User';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n  baseUrl = environment.apiUrl;\n  private currentUserSource = new ReplaySubject<User>(1);\n  currentUser$ = this.currentUserSource.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  login(model: any) {\n    return this.http.post(`${this.baseUrl}account/login`, model).pipe(\n      map((res: User) => {\n        const user = res;\n\n        if (user) {\n          this.setCurrentUser(user);\n        }\n      })\n    )\n  }\n\n  setCurrentUser(user: User) {\n    user.roles = [];\n    const roles = this.getDecodedToken(user.token).role;\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\n    \n    localStorage.setItem('chromaUser', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n\n  register(model: any) {\n    return this.http.post(`${this.baseUrl}account/register`, model).pipe(\n      map((user: User) => {\n        if (user) {\n          this.setCurrentUser(user);\n        }\n      })\n    )\n  }\n\n  logout() {\n    localStorage.removeItem('chromaUser');\n    this.currentUserSource.next(null);\n  }\n\n  getDecodedToken(token) {\n    return JSON.parse(atob(token.split('.')[1])); // split to grab payload\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Palette } from '../_models/Palette';\nimport { DisplayPalette } from '../_models/DisplayPalette';\nimport { UserParams } from '../_models/UserParams';\nimport { User } from '../_models/User';\nimport { map, take } from 'rxjs/operators';\nimport { AccountService } from './account.service';\nimport { of } from 'rxjs';\nimport { getPaginatedResults, getPaginationHeaders } from './paginationHelper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaletteService {\n  baseUrl = environment.apiUrl;\n  palettes: Palette[] = [];\n  paletteCache = new Map();\n  user: User;\n  userParams: UserParams;\n\n  getUserParams = () => {\n    return this.userParams;\n  }\n\n  setUserParams = (params: UserParams) => {\n    this.userParams = params;\n  }\n\n  constructor(private http: HttpClient, private accountService: AccountService) {\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n      this.user = user;\n    })\n\n    this.userParams = new UserParams();\n  }\n\n  getAllPalettes(userParams: UserParams) {\n    var response = this.paletteCache.get(Object.values(userParams).join('-'));\n\n    if (response) {\n      return of(response);\n    }\n\n    let params = getPaginationHeaders(userParams.pageNumber, userParams.pageSize);\n\n    return getPaginatedResults<Palette[]>(`${this.baseUrl}palettes`, params, this.http)\n    .pipe(map(response => {\n      this.paletteCache.set(Object.values(userParams).join('-'), response);\n      return response;\n    }));\n  }\n\n  getPalette(id: string) {\n    return this.http.get<Palette>(`${this.baseUrl}palettes/${id}`);\n  }\n\n  createNewPalette(newPalette: DisplayPalette) {\n    return this.http.post<DisplayPalette>(`${this.baseUrl}users/add-palette`, newPalette);\n  }\n\n  generateRandomPalette() {\n    return this.http.get<DisplayPalette>(`${this.baseUrl}palettes/random-palette`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'https://localhost:5001/api/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccountService } from '../_services/account.service';\nimport { User } from '../_models/User';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  constructor(private accountService: AccountService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let currentUser: User;\n\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\n    \n    if (currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${currentUser.token}`,\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","import { Component, Input, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.css']\n})\nexport class TextInputComponent implements ControlValueAccessor {\n  @Input() label: string;\n  @Input() type = 'text';\n\n  constructor(@Self() public ngControl: NgControl) {\n    this.ngControl.valueAccessor = this;\n  }\n  writeValue(obj: any): void {\n  }\n  registerOnChange(fn: any): void {\n  }\n  registerOnTouched(fn: any): void {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-form-field>\n  <input matInput type={{type}} placeholder={{label}} [formControl]=\"ngControl.control\"\n    [class.is-invalid]=\"ngControl.touched && ngControl.invalid\">\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">\n    Please enter a {{label}}\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\n    {{label}} must be at least {{ngControl.errors.minlength['requiredLength']}} characters\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\n    {{label}} must be no more than {{ngControl.errors.maxlength['requiredLength']}} characters\n  </div>\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">\n    Passwords do not match\n  </div>\n</mat-form-field>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-palette-color',\n  templateUrl: './new-palette-color.component.html',\n  styleUrls: ['./new-palette-color.component.css']\n})\nexport class NewPaletteColorComponent implements OnInit {\n  @Input() color: string;\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n","<div class=\"palette-color\" [style.background]=\"color\" [matTooltip]=\"color\" [matTooltipHideDelay]=\"1000\"\n  [cdkCopyToClipboard]=\"color\"></div>\n","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  result: T;\n  pagination: Pagination;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PageEvent } from '@angular/material/paginator';\nimport { DisplayPalette } from '../_models/DisplayPalette';\nimport { Pagination } from '../_models/PaginatedResult';\nimport { UserParams } from '../_models/UserParams';\nimport { AccountService } from '../_services/account.service';\nimport { PaletteService } from '../_services/palette.service';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n  loading = false;\n  registerMode = false;\n  palettes: DisplayPalette[];\n  randomPalette: DisplayPalette;\n  pagination: Pagination;\n  userParams: UserParams;\n\n  constructor(public accountService: AccountService, private paletteService: PaletteService) {\n    this.userParams = this.paletteService.getUserParams();\n  }\n\n  ngOnInit(): void {\n    this.loadPalettes();\n    this.generateRandomPalette();\n  }\n\n  registerToggle() {\n    this.registerMode = !this.registerMode;\n  }\n\n  cancelRegisterMode(event: boolean) {\n    this.registerMode = event;\n  }\n\n  handlePageEvent(event: PageEvent) {\n    this.userParams.pageNumber = event.pageIndex + 1;\n    this.userParams.pageSize = event.pageSize;\n  }\n\n  loadPalettes(){\n    this.loading = true;\n\n    this.paletteService.getAllPalettes(this.userParams).subscribe(res => {\n      this.palettes = res.result;\n      this.pagination = res.pagination;\n      this.loading = false;\n    })\n  }\n\n  createNewPalette() {\n    this.paletteService.createNewPalette(this.randomPalette).subscribe((res) => {\n      this.palettes.unshift(res);\n      this.generateRandomPalette();\n    });\n  }\n\n  generateRandomPalette() {\n    this.paletteService.generateRandomPalette().subscribe(res => {\n      localStorage.setItem(\"randomPalette\", JSON.stringify(res));\n      this.randomPalette = res;\n    })\n  }\n}\n","<div style=\"justify-content: center; display: flex; margin-top: 40px;\"\n  *ngIf=\"(accountService.currentUser$ | async) === null\">\n  <mat-card style=\"width: 75%;\">\n    <button mat-button (click)=\"registerToggle()\">Register?</button>\n    <app-registration (cancelRegistration)=\"cancelRegisterMode($event)\" *ngIf=\"registerMode\"></app-registration>\n  </mat-card>\n</div>\n<div *ngIf=\"randomPalette\">\n  <div style=\"display: flex;\">\n    <app-new-palette-color [color]=\"randomPalette.color1\" style=\"width: 100%;\"></app-new-palette-color>\n    <app-new-palette-color [color]=\"randomPalette.color2\" style=\"width: 100%;\"></app-new-palette-color>\n    <app-new-palette-color [color]=\"randomPalette.color3\" style=\"width: 100%;\"></app-new-palette-color>\n    <app-new-palette-color [color]=\"randomPalette.color4\" style=\"width: 100%;\"></app-new-palette-color>\n    <app-new-palette-color [color]=\"randomPalette.color5\" style=\"width: 100%;\"></app-new-palette-color>\n  </div>\n  <div style=\"display: flex; justify-content: center; margin-top: 20px;\">\n    <button mat-button color=\"primary\" (click)=\"generateRandomPalette()\">New Colors</button>\n    <mat-form-field>\n      <input matInput type=\"text\" placeholder=\"Palette title\" [(ngModel)]=\"randomPalette.title\">\n    </mat-form-field>\n    <!-- TODO: Prompt user to register- save palette to localstorage for retrieval -->\n    <button mat-button color=\"primary\" (click)=\"createNewPalette()\"\n      *ngIf=\"(accountService.currentUser$ | async) && randomPalette.title\">\n      Save Palette\n    </button>\n  </div>\n</div>\n<div *ngIf=\"!loading\">\n  <mat-grid-list cols=\"3\" rowHeight=\"2:1\">\n    <mat-paginator [pageIndex]=\"pagination.currentPage - 1\" [length]=\"pagination.totalItems\"\n      [pageSize]=\"pagination.itemsPerPage\" [pageSizeOptions]=\"[5, 10, 25, 100]\" (page)=\"handlePageEvent($event)\"\n      (click)=\"loadPalettes()\">\n    </mat-paginator>\n    <div style=\"justify-content: center;\" *ngFor=\"let palette of palettes\">\n      <mat-grid-tile>\n        <app-palette-card [palette]=\"palette\"></app-palette-card>\n      </mat-grid-tile>\n    </div>\n  </mat-grid-list>\n  <mat-paginator [pageIndex]=\"pagination.currentPage - 1\" [length]=\"pagination.totalItems\"\n    [pageSize]=\"pagination.itemsPerPage\" [pageSizeOptions]=\"[5, 10, 25, 100]\" (page)=\"handlePageEvent($event)\"\n    (click)=\"loadPalettes()\">\n  </mat-paginator>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/_models/User';\nimport { AccountService } from 'src/app/_services/account.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Chroma';\n\n  constructor(public accountService: AccountService) {}\n\n  ngOnInit(): void {\n    this.setCurrentUser();\n  }\n\n  setCurrentUser() {\n    const user: User = JSON.parse(localStorage.getItem('chromaUser'));\n\n    if (user) {\n      this.accountService.setCurrentUser(user);\n    }\n  }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Palette } from '../_models/Palette';\n\n@Component({\n  selector: 'app-palette-card',\n  templateUrl: './palette-card.component.html',\n  styleUrls: ['./palette-card.component.css']\n})\nexport class PaletteCardComponent implements OnInit {\n  @Input() palette: Palette;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div routerLink=\"/palettes/{{palette.id}}\" class=\"card-wrapper\">\n  <mat-card>\n    <mat-card-title>\n      {{palette.title}}\n    </mat-card-title>\n    <div style=\"display: flex;\">\n      <!-- TODO: WIDTH - responsiveness -->\n      <div [style.background]=\"palette.color1\" style=\"width: 80px; height: 120px;\"></div>\n      <div [style.background]=\"palette.color2\" style=\"width: 80px; height: 120px;\"></div>\n      <div [style.background]=\"palette.color3\" style=\"width: 80px; height: 120px;\"></div>\n      <div [style.background]=\"palette.color4\" style=\"width: 80px; height: 120px;\"></div>\n      <div [style.background]=\"palette.color5\" style=\"width: 80px; height: 120px;\"></div>\n    </div>\n  </mat-card>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\n// MATERIAL\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatMenuModule } from '@angular/material/menu'; \nimport { MatIconModule } from '@angular/material/icon'; \nimport { MatCardModule } from '@angular/material/card'; \nimport { MatButtonModule  } from '@angular/material/button'; \nimport { MatFormFieldModule  } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\n// COMPONENTS\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { TextInputComponent } from './text-input/text-input.component';\nimport { PaletteCardComponent } from './palette-card/palette-card.component';\nimport { PaletteDetailComponent } from './palette-detail/palette-detail.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { NewPaletteColorComponent } from './new-palette-color/new-palette-color.component';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegistrationComponent,\n    TextInputComponent,\n    PaletteCardComponent,\n    PaletteDetailComponent,\n    HomepageComponent,\n    NewPaletteColorComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatCardModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatInputModule,\n    MatTooltipModule,\n    ClipboardModule,\n    MatPaginatorModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AccountService } from '../_services/account.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  model: any = {};\n  hidePassword = true;\n\n  constructor(public accountService: AccountService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.accountService.login(this.model).subscribe(res => {\n      this.router.navigateByUrl('/');\n    })\n  }\n\n  logout() {\n    this.accountService.logout();\n    this.router.navigateByUrl('/')\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <span routerLink='/' class=\"main-brand\">Chroma</span>\n    <span class=\"nav-spacer\"></span>\n    <span *ngIf=\"(accountService.currentUser$ | async) as user\">\n      <button mat-icon-button aria-label=\"Toggle logged in user menu\" [matMenuTriggerFor]=\"userSettingMenu\">\n        <mat-icon>menu</mat-icon>\n      </button>\n\n      <mat-menu #userSettingMenu=\"matMenu\">\n        <button mat-menu-item (click)=\"logout()\">Logout <mat-icon>logout</mat-icon></button>\n        <button mat-menu-item>TODO: Edit Profile</button>\n        <button mat-menu-item>TODO: My Palettes</button>\n      </mat-menu>\n    </span>\n    <div class=\"login-container\" *ngIf=\"(accountService.currentUser$ | async) === null\">\n      <form (ngSubmit)=\"login()\" #loginForm=\"ngForm\" autocomplete=\"off\">\n        <mat-form-field>\n          <mat-label>Username</mat-label>\n          <input matInput type=\"text\" name=\"username\" [(ngModel)]=\"model.username\">\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Enter your password</mat-label>\n          <input matInput [type]=\"hidePassword ? 'password' : 'text'\" name=\"password\" [(ngModel)]=\"model.password\">\n          <button mat-icon-button matSuffix (click)=\"hidePassword = !hidePassword\" [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hidePassword\">\n            <mat-icon>{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\n          </button>\n        </mat-form-field>\n        <button mat-button type=\"submit\">Login</button>\n      </form>\n    </div>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Injectable } from \"@angular/core\";\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { Palette } from \"../_models/Palette\";\nimport { PaletteService } from \"../_services/palette.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaletteDetailResolver implements Resolve<Palette> {\n\n  constructor(private paletteService: PaletteService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<Palette> {\n    return this.paletteService.getPalette(route.paramMap.get('id'));\n  };\n};\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { PaginatedResult } from \"../_models/PaginatedResult\";\n\nexport function getPaginatedResults<T>(url, params, http: HttpClient) {\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\n\n  return http.get<T>(url, { observe: 'response', params }).pipe(\n    map(response => {\n      paginatedResult.result = response.body;\n\n      if (response.headers.get('Pagination') !== null) {\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\n      }\n\n      return paginatedResult;\n    })\n  );\n}\n\nexport const getPaginationHeaders = (pageNumber: number, pageSize: number) => {\n  let params = new HttpParams();\n\n  params = params.append('pageNumber', pageNumber.toString());\n  params = params.append('pageSize', pageSize.toString());\n\n  return params;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { PaletteDetailComponent } from './palette-detail/palette-detail.component';\nimport { PaletteDetailResolver } from './_resolvers/palette-detail.resolver';\n\nconst routes: Routes = [\n  { path: '', component: HomepageComponent },\n  {\n    path: '',\n    runGuardsAndResolvers: 'always',\n    children: [\n      { path: 'palettes/:id', component: PaletteDetailComponent, resolve: { PaletteDetailResolver } },\n    ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}